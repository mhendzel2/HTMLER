"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/earnings/route";
exports.ids = ["app/api/earnings/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fearnings%2Froute&page=%2Fapi%2Fearnings%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fearnings%2Froute.ts&appDir=C%3A%5CUsers%5Cmjhen%5CHTER%5CHTMLER%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cmjhen%5CHTER%5CHTMLER&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fearnings%2Froute&page=%2Fapi%2Fearnings%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fearnings%2Froute.ts&appDir=C%3A%5CUsers%5Cmjhen%5CHTER%5CHTMLER%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cmjhen%5CHTER%5CHTMLER&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_mjhen_HTER_HTMLER_app_api_earnings_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/earnings/route.ts */ \"(rsc)/./app/api/earnings/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/earnings/route\",\n        pathname: \"/api/earnings\",\n        filename: \"route\",\n        bundlePath: \"app/api/earnings/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\mjhen\\\\HTER\\\\HTMLER\\\\app\\\\api\\\\earnings\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_mjhen_HTER_HTMLER_app_api_earnings_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/earnings/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZlYXJuaW5ncyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGZWFybmluZ3MlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZlYXJuaW5ncyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNtamhlbiU1Q0hURVIlNUNIVE1MRVIlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q21qaGVuJTVDSFRFUiU1Q0hUTUxFUiZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDWTtBQUN6RjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3VudXN1YWwtd2hhbGVzLWFuYWx5dGljcy8/MDA0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxtamhlblxcXFxIVEVSXFxcXEhUTUxFUlxcXFxhcHBcXFxcYXBpXFxcXGVhcm5pbmdzXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9lYXJuaW5ncy9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2Vhcm5pbmdzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9lYXJuaW5ncy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXG1qaGVuXFxcXEhURVJcXFxcSFRNTEVSXFxcXGFwcFxcXFxhcGlcXFxcZWFybmluZ3NcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2Vhcm5pbmdzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fearnings%2Froute&page=%2Fapi%2Fearnings%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fearnings%2Froute.ts&appDir=C%3A%5CUsers%5Cmjhen%5CHTER%5CHTMLER%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cmjhen%5CHTER%5CHTMLER&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/earnings/route.ts":
/*!***********************************!*\
  !*** ./app/api/earnings/route.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_unusual_whales_api__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/unusual-whales-api */ \"(rsc)/./lib/unusual-whales-api.ts\");\nconst dynamic = \"force-dynamic\";\n\n\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const type = searchParams.get(\"type\") || \"afterhours\";\n        const ticker = searchParams.get(\"ticker\");\n        const date = searchParams.get(\"date\");\n        const limit = parseInt(searchParams.get(\"limit\") || \"50\");\n        const page = parseInt(searchParams.get(\"page\") || \"0\");\n        let data;\n        if (type === \"historical\" && ticker) {\n            data = await _lib_unusual_whales_api__WEBPACK_IMPORTED_MODULE_1__.unusualWhalesAPI.getEarningsHistorical(ticker);\n        } else if (type === \"afterhours\") {\n            data = await _lib_unusual_whales_api__WEBPACK_IMPORTED_MODULE_1__.unusualWhalesAPI.getEarningsAfterHours(date || undefined, limit, page);\n        } else if (type === \"premarket\") {\n            data = await _lib_unusual_whales_api__WEBPACK_IMPORTED_MODULE_1__.unusualWhalesAPI.getEarningsPreMarket(date || undefined, limit, page);\n        } else {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Invalid type parameter or missing ticker for historical data\"\n            }, {\n                status: 400\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(data);\n    } catch (error) {\n        console.error(\"Earnings API error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch earnings data\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2Vhcm5pbmdzL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDTyxNQUFNQSxVQUFVLGdCQUFnQjtBQUVpQjtBQUNJO0FBRXJELGVBQWVHLElBQUlDLE9BQW9CO0lBQzVDLElBQUk7UUFDRixNQUFNLEVBQUVDLFlBQVksRUFBRSxHQUFHLElBQUlDLElBQUlGLFFBQVFHLEdBQUc7UUFDNUMsTUFBTUMsT0FBT0gsYUFBYUksR0FBRyxDQUFDLFdBQVc7UUFDekMsTUFBTUMsU0FBU0wsYUFBYUksR0FBRyxDQUFDO1FBQ2hDLE1BQU1FLE9BQU9OLGFBQWFJLEdBQUcsQ0FBQztRQUM5QixNQUFNRyxRQUFRQyxTQUFTUixhQUFhSSxHQUFHLENBQUMsWUFBWTtRQUNwRCxNQUFNSyxPQUFPRCxTQUFTUixhQUFhSSxHQUFHLENBQUMsV0FBVztRQUVsRCxJQUFJTTtRQUNKLElBQUlQLFNBQVMsZ0JBQWdCRSxRQUFRO1lBQ25DSyxPQUFPLE1BQU1iLHFFQUFnQkEsQ0FBQ2MscUJBQXFCLENBQUNOO1FBQ3RELE9BQU8sSUFBSUYsU0FBUyxjQUFjO1lBQ2hDTyxPQUFPLE1BQU1iLHFFQUFnQkEsQ0FBQ2UscUJBQXFCLENBQUNOLFFBQVFPLFdBQVdOLE9BQU9FO1FBQ2hGLE9BQU8sSUFBSU4sU0FBUyxhQUFhO1lBQy9CTyxPQUFPLE1BQU1iLHFFQUFnQkEsQ0FBQ2lCLG9CQUFvQixDQUFDUixRQUFRTyxXQUFXTixPQUFPRTtRQUMvRSxPQUFPO1lBQ0wsT0FBT2IscURBQVlBLENBQUNtQixJQUFJLENBQUM7Z0JBQUVDLE9BQU87WUFBK0QsR0FBRztnQkFBRUMsUUFBUTtZQUFJO1FBQ3BIO1FBRUEsT0FBT3JCLHFEQUFZQSxDQUFDbUIsSUFBSSxDQUFDTDtJQUMzQixFQUFFLE9BQU9NLE9BQU87UUFDZEUsUUFBUUYsS0FBSyxDQUFDLHVCQUF1QkE7UUFDckMsT0FBT3BCLHFEQUFZQSxDQUFDbUIsSUFBSSxDQUN0QjtZQUFFQyxPQUFPO1FBQWdDLEdBQ3pDO1lBQUVDLFFBQVE7UUFBSTtJQUVsQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW51c3VhbC13aGFsZXMtYW5hbHl0aWNzLy4vYXBwL2FwaS9lYXJuaW5ncy9yb3V0ZS50cz85ODNjIl0sInNvdXJjZXNDb250ZW50IjpbIlxyXG5leHBvcnQgY29uc3QgZHluYW1pYyA9IFwiZm9yY2UtZHluYW1pY1wiO1xyXG5cclxuaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJztcclxuaW1wb3J0IHsgdW51c3VhbFdoYWxlc0FQSSB9IGZyb20gJ0AvbGliL3VudXN1YWwtd2hhbGVzLWFwaSc7XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gR0VUKHJlcXVlc3Q6IE5leHRSZXF1ZXN0KSB7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHsgc2VhcmNoUGFyYW1zIH0gPSBuZXcgVVJMKHJlcXVlc3QudXJsKTtcclxuICAgIGNvbnN0IHR5cGUgPSBzZWFyY2hQYXJhbXMuZ2V0KCd0eXBlJykgfHwgJ2FmdGVyaG91cnMnO1xyXG4gICAgY29uc3QgdGlja2VyID0gc2VhcmNoUGFyYW1zLmdldCgndGlja2VyJyk7XHJcbiAgICBjb25zdCBkYXRlID0gc2VhcmNoUGFyYW1zLmdldCgnZGF0ZScpO1xyXG4gICAgY29uc3QgbGltaXQgPSBwYXJzZUludChzZWFyY2hQYXJhbXMuZ2V0KCdsaW1pdCcpIHx8ICc1MCcpO1xyXG4gICAgY29uc3QgcGFnZSA9IHBhcnNlSW50KHNlYXJjaFBhcmFtcy5nZXQoJ3BhZ2UnKSB8fCAnMCcpO1xyXG5cclxuICAgIGxldCBkYXRhO1xyXG4gICAgaWYgKHR5cGUgPT09ICdoaXN0b3JpY2FsJyAmJiB0aWNrZXIpIHtcclxuICAgICAgZGF0YSA9IGF3YWl0IHVudXN1YWxXaGFsZXNBUEkuZ2V0RWFybmluZ3NIaXN0b3JpY2FsKHRpY2tlcik7XHJcbiAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICdhZnRlcmhvdXJzJykge1xyXG4gICAgICBkYXRhID0gYXdhaXQgdW51c3VhbFdoYWxlc0FQSS5nZXRFYXJuaW5nc0FmdGVySG91cnMoZGF0ZSB8fCB1bmRlZmluZWQsIGxpbWl0LCBwYWdlKTtcclxuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ3ByZW1hcmtldCcpIHtcclxuICAgICAgZGF0YSA9IGF3YWl0IHVudXN1YWxXaGFsZXNBUEkuZ2V0RWFybmluZ3NQcmVNYXJrZXQoZGF0ZSB8fCB1bmRlZmluZWQsIGxpbWl0LCBwYWdlKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnSW52YWxpZCB0eXBlIHBhcmFtZXRlciBvciBtaXNzaW5nIHRpY2tlciBmb3IgaGlzdG9yaWNhbCBkYXRhJyB9LCB7IHN0YXR1czogNDAwIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihkYXRhKTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRWFybmluZ3MgQVBJIGVycm9yOicsIGVycm9yKTtcclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgeyBlcnJvcjogJ0ZhaWxlZCB0byBmZXRjaCBlYXJuaW5ncyBkYXRhJyB9LFxyXG4gICAgICB7IHN0YXR1czogNTAwIH1cclxuICAgICk7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJkeW5hbWljIiwiTmV4dFJlc3BvbnNlIiwidW51c3VhbFdoYWxlc0FQSSIsIkdFVCIsInJlcXVlc3QiLCJzZWFyY2hQYXJhbXMiLCJVUkwiLCJ1cmwiLCJ0eXBlIiwiZ2V0IiwidGlja2VyIiwiZGF0ZSIsImxpbWl0IiwicGFyc2VJbnQiLCJwYWdlIiwiZGF0YSIsImdldEVhcm5pbmdzSGlzdG9yaWNhbCIsImdldEVhcm5pbmdzQWZ0ZXJIb3VycyIsInVuZGVmaW5lZCIsImdldEVhcm5pbmdzUHJlTWFya2V0IiwianNvbiIsImVycm9yIiwic3RhdHVzIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/earnings/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/unusual-whales-api.ts":
/*!***********************************!*\
  !*** ./lib/unusual-whales-api.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UnusualWhalesAPI: () => (/* binding */ UnusualWhalesAPI),\n/* harmony export */   UnusualWhalesAPIError: () => (/* binding */ UnusualWhalesAPIError),\n/* harmony export */   unusualWhalesAPI: () => (/* binding */ unusualWhalesAPI)\n/* harmony export */ });\nconst API_BASE_URL = process.env.UNUSUAL_WHALES_API_BASE_URL || \"https://api.unusualwhales.com\";\nconst API_KEY = process.env.UNUSUAL_WHALES_API_KEY;\nclass UnusualWhalesAPIError extends Error {\n    constructor(message, status, response){\n        super(message);\n        this.status = status;\n        this.response = response;\n        this.name = \"UnusualWhalesAPIError\";\n    }\n}\nclass UnusualWhalesAPI {\n    constructor(){\n        this.rateLimitDelay = 100 // 10 requests per second\n        ;\n    }\n    static getInstance() {\n        if (!UnusualWhalesAPI.instance) {\n            UnusualWhalesAPI.instance = new UnusualWhalesAPI();\n        }\n        return UnusualWhalesAPI.instance;\n    }\n    getHeaders() {\n        const headers = {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\"\n        };\n        if (API_KEY) {\n            headers[\"Authorization\"] = `Bearer ${API_KEY}`;\n        }\n        return headers;\n    }\n    buildUrl(endpoint, params) {\n        const url = new URL(`/api${endpoint}`, API_BASE_URL);\n        if (params) {\n            Object.entries(params).forEach(([key, value])=>{\n                if (value !== undefined && value !== null) {\n                    url.searchParams.append(key, String(value));\n                }\n            });\n        }\n        return url.toString();\n    }\n    async makeRequest(endpoint, options = {}) {\n        const { method = \"GET\", params, cache = \"default\" } = options;\n        // Rate limiting\n        await new Promise((resolve)=>setTimeout(resolve, this.rateLimitDelay));\n        const url = this.buildUrl(endpoint, params);\n        try {\n            const response = await fetch(url, {\n                method,\n                headers: this.getHeaders(),\n                cache\n            });\n            if (!response.ok) {\n                const errorText = await response.text().catch(()=>\"Unknown error\");\n                throw new UnusualWhalesAPIError(`API request failed: ${response.status} ${response.statusText}`, response.status, errorText);\n            }\n            const data = await response.json();\n            return data;\n        } catch (error) {\n            if (error instanceof UnusualWhalesAPIError) {\n                throw error;\n            }\n            throw new UnusualWhalesAPIError(`Network error: ${error instanceof Error ? error.message : \"Unknown error\"}`);\n        }\n    }\n    // Market Endpoints\n    async getMarketTide(sector, date, interval5m = false) {\n        const endpoint = sector ? `/market/${sector}/sector-tide` : \"/market/market-tide\";\n        const params = {};\n        if (date) params.date = date;\n        if (interval5m) params.interval_5m = interval5m;\n        return this.makeRequest(endpoint, {\n            params,\n            cache: \"no-store\"\n        });\n    }\n    async getMarketCorrelations(startDate, endDate) {\n        const params = {};\n        if (startDate) params.start_date = startDate;\n        if (endDate) params.end_date = endDate;\n        return this.makeRequest(\"/market/correlations\", {\n            params\n        });\n    }\n    // Earnings Endpoints\n    async getEarningsAfterHours(date, limit = 50, page = 0) {\n        const params = {\n            limit,\n            page\n        };\n        if (date) params.date = date;\n        return this.makeRequest(\"/earnings/afterhours\", {\n            params\n        });\n    }\n    async getEarningsPreMarket(date, limit = 50, page = 0) {\n        const params = {\n            limit,\n            page\n        };\n        if (date) params.date = date;\n        return this.makeRequest(\"/earnings/premarket\", {\n            params\n        });\n    }\n    async getEarningsHistorical(ticker) {\n        return this.makeRequest(`/earnings/${ticker}`);\n    }\n    // Options Endpoints\n    async getOptionContract(contractId) {\n        return this.makeRequest(`/option-contract/${contractId}`);\n    }\n    async getOptionContractIntraday(contractId, date) {\n        const params = {};\n        if (date) params.date = date;\n        return this.makeRequest(`/option-contract/${contractId}/intraday`, {\n            params\n        });\n    }\n    async getOptionContractVolumeProfile(contractId) {\n        return this.makeRequest(`/option-contract/${contractId}/volume-profile`);\n    }\n    async getStockOptionsData(ticker) {\n        return this.makeRequest(`/stock/${ticker}/options`);\n    }\n    async getStockGreeks(ticker) {\n        return this.makeRequest(`/stock/${ticker}/greeks`);\n    }\n    async getStockOIPerStrike(ticker) {\n        return this.makeRequest(`/stock/${ticker}/oi-per-strike`);\n    }\n    async getStockOIPerExpiry(ticker) {\n        return this.makeRequest(`/stock/${ticker}/oi-per-expiry`);\n    }\n    async getStockOptionsVolume(ticker, limit = 1) {\n        const params = {\n            limit\n        };\n        return this.makeRequest(`/stock/${ticker}/options-volume`, {\n            params\n        });\n    }\n    // Stock Endpoints\n    async getStockInfo(ticker) {\n        return this.makeRequest(`/stock/${ticker}`);\n    }\n    async getStockState(ticker) {\n        return this.makeRequest(`/stock/${ticker}/stock-state`);\n    }\n    async getStockNetPremTicks(ticker, date) {\n        const params = {};\n        if (date) params.date = date;\n        return this.makeRequest(`/stock/${ticker}/net-prem-ticks`, {\n            params\n        });\n    }\n    // GEX and Flow Analytics Endpoints\n    async getStockFlowAlerts(ticker, isAskSide = true, isBidSide = true, limit = 100) {\n        const params = {\n            is_ask_side: isAskSide,\n            is_bid_side: isBidSide,\n            limit\n        };\n        return this.makeRequest(`/stock/${ticker}/flow-alerts`, {\n            params\n        });\n    }\n    async getFlowAlerts(limit = 50) {\n        const params = {\n            limit\n        };\n        return this.makeRequest(\"/option-trades/flow-alerts\", {\n            params\n        });\n    }\n    async getStockGEX(ticker) {\n        return this.makeRequest(`/stock/${ticker}/gex`);\n    }\n    async getStockGreekFlow(ticker, date, expiry) {\n        const params = {};\n        if (date) params.date = date;\n        if (expiry) params.expiry = expiry;\n        return this.makeRequest(`/stock/${ticker}/greek-flow`, {\n            params\n        });\n    }\n    async getStockMaxPain(ticker, date) {\n        const params = {};\n        if (date) params.date = date;\n        return this.makeRequest(`/stock/${ticker}/max-pain`, {\n            params\n        });\n    }\n    // Enhanced Net Premium Analysis with cumulative calculation\n    async getStockNetPremTicksProcessed(ticker, date) {\n        try {\n            const response = await this.getStockNetPremTicks(ticker, date);\n            if (!response?.data?.data || !Array.isArray(response.data.data)) {\n                return response;\n            }\n            const { data } = response.data;\n            const fieldsToSum = [\n                \"net_call_premium\",\n                \"net_call_volume\",\n                \"net_put_premium\",\n                \"net_put_volume\"\n            ];\n            let result = [];\n            data.forEach((tick, idx)=>{\n                // Parse numeric values\n                tick.net_call_premium = parseFloat(tick.net_call_premium || \"0\");\n                tick.net_put_premium = parseFloat(tick.net_put_premium || \"0\");\n                tick.net_call_volume = parseFloat(tick.net_call_volume || \"0\");\n                tick.net_put_volume = parseFloat(tick.net_put_volume || \"0\");\n                // Add cumulative data from previous tick\n                if (idx !== 0) {\n                    fieldsToSum.forEach((field)=>{\n                        tick[field] = tick[field] + result[idx - 1][field];\n                    });\n                }\n                result.push(tick);\n            });\n            return {\n                ...response,\n                data: {\n                    ...response.data,\n                    data: result\n                }\n            };\n        } catch (error) {\n            throw new UnusualWhalesAPIError(`Failed to get processed net premium ticks for ${ticker}: ${error instanceof Error ? error.message : \"Unknown error\"}`);\n        }\n    }\n    // Congress Endpoints\n    async getCongressRecentTrades(limit = 100, offset = 0, startDate, endDate, ticker, congressMember) {\n        const params = {\n            limit,\n            offset\n        };\n        if (startDate) params.start_date = startDate;\n        if (endDate) params.end_date = endDate;\n        if (ticker) params.ticker = ticker;\n        if (congressMember) params.congress_member = congressMember;\n        return this.makeRequest(\"/congress/recent-trades\", {\n            params\n        });\n    }\n    async getCongressTopTradedTickers(limit = 10, startDate, endDate) {\n        const params = {\n            limit\n        };\n        if (startDate) params.start_date = startDate;\n        if (endDate) params.end_date = endDate;\n        return this.makeRequest(\"/congress/top-traded-tickers\", {\n            params\n        });\n    }\n    // Alerts Endpoints\n    async getAlerts(configIds, intradayOnly = true, limit = 100, page = 0, notiTypes, tickerSymbols) {\n        const params = {\n            intraday_only: intradayOnly,\n            limit,\n            page\n        };\n        if (configIds?.length) {\n            configIds.forEach((id, index)=>{\n                params[`config_ids[${index}]`] = id;\n            });\n        }\n        if (notiTypes?.length) {\n            notiTypes.forEach((type, index)=>{\n                params[`noti_types[${index}]`] = type;\n            });\n        }\n        if (tickerSymbols) {\n            params.ticker_symbols = tickerSymbols;\n        }\n        return this.makeRequest(\"/alerts\", {\n            params\n        });\n    }\n    async getAlertConfigurations() {\n        return this.makeRequest(\"/alerts/configuration\");\n    }\n    // News Endpoints\n    async getNewsHeadlines(limit = 50, page = 0, startDate, endDate, ticker) {\n        const params = {\n            limit,\n            page\n        };\n        if (startDate) params.start_date = startDate;\n        if (endDate) params.end_date = endDate;\n        if (ticker) params.ticker = ticker;\n        return this.makeRequest(\"/news/headlines\", {\n            params\n        });\n    }\n    // Institution Endpoints\n    async getInstitutions() {\n        return this.makeRequest(\"/institutions\");\n    }\n    async getInstitutionHoldings(name) {\n        return this.makeRequest(`/institution/${encodeURIComponent(name)}/holdings`);\n    }\n    async getInstitutionActivity(name) {\n        return this.makeRequest(`/institution/${encodeURIComponent(name)}/activity`);\n    }\n    async getInstitutionSectors(name) {\n        return this.makeRequest(`/institution/${encodeURIComponent(name)}/sectors`);\n    }\n    // ETF Endpoints\n    async getETFInflowOutflow(ticker) {\n        return this.makeRequest(`/etfs/${ticker}/in_outflow`);\n    }\n    // Shorts Endpoints\n    async getShortsData(ticker) {\n        return this.makeRequest(`/shorts/${ticker}/data`);\n    }\n    async getShortsVolumesByExchange(ticker) {\n        return this.makeRequest(`/shorts/${ticker}/volumes-by-exchange`);\n    }\n    async getShortsFTDs(ticker) {\n        return this.makeRequest(`/shorts/${ticker}/ftds`);\n    }\n    async getShortsInterestFloat(ticker) {\n        return this.makeRequest(`/shorts/${ticker}/interest-float`);\n    }\n    async getShortsVolumeAndRatio(ticker) {\n        return this.makeRequest(`/shorts/${ticker}/volume-and-ratio`);\n    }\n    // Additional Market Endpoints\n    async getMarketFDACalendar(startDate, endDate) {\n        const params = {};\n        if (startDate) params.start_date = startDate;\n        if (endDate) params.end_date = endDate;\n        return this.makeRequest(\"/market/fda-calendar\", {\n            params\n        });\n    }\n    async getMarketOIChange(limit = 100, page = 0) {\n        const params = {\n            limit,\n            page\n        };\n        return this.makeRequest(\"/market/oi-change\", {\n            params\n        });\n    }\n    async getNetFlowExpiry(tickerSymbol, tideType, moneyness, expiryCategory) {\n        const params = {};\n        if (tickerSymbol) params.ticker_symbol = tickerSymbol;\n        if (tideType) params.tide_type = tideType;\n        if (moneyness) params.moneyness = moneyness;\n        if (expiryCategory) params.expiry_category = expiryCategory;\n        return this.makeRequest(\"/net-flow/expiry\", {\n            params\n        });\n    }\n    // Stock Advanced Endpoints\n    async getStockInterpolatedIV(ticker, days) {\n        const params = {};\n        if (days?.length) {\n            days.forEach((day, index)=>{\n                params[`days[${index}]`] = day;\n            });\n        }\n        return this.makeRequest(`/stock/${ticker}/interpolated-iv`, {\n            params\n        });\n    }\n    async getStockNOPE(ticker) {\n        return this.makeRequest(`/stock/${ticker}/nope`);\n    }\n    async getStockSpotExposures(ticker, expiry, strike) {\n        if (expiry && strike) {\n            return this.makeRequest(`/stock/${ticker}/spot-exposures/expiry-strike`, {\n                params: {\n                    expiry: expiry,\n                    strike: strike\n                }\n            });\n        }\n        return this.makeRequest(`/stock/${ticker}/spot-exposures`);\n    }\n    // Dark Pool / Off-Lit Endpoints\n    async getDarkPoolData(ticker, startDate, endDate, minSize, minPremium) {\n        const params = {};\n        if (startDate) params.start_date = startDate;\n        if (endDate) params.end_date = endDate;\n        if (minSize) params.min_size = minSize;\n        if (minPremium) params.min_premium = minPremium;\n        return this.makeRequest(`/stock/${ticker}/darkpool`, {\n            params\n        });\n    }\n    // Group Flow Endpoints\n    async getGroupFlowGreekFlow(flowGroup, expiry) {\n        const endpoint = expiry ? `/group-flow/${flowGroup}/greek-flow/${expiry}` : `/group-flow/${flowGroup}/greek-flow`;\n        return this.makeRequest(endpoint);\n    }\n    // Institution Advanced Endpoints\n    async getInstitutionLatestFilings(limit = 50, page = 0) {\n        const params = {\n            limit,\n            page\n        };\n        return this.makeRequest(\"/institution/latest_filings\", {\n            params\n        });\n    }\n    async getInstitutionOwnership(ticker) {\n        return this.makeRequest(`/institution/${ticker}/ownership`);\n    }\n}\nconst unusualWhalesAPI = UnusualWhalesAPI.getInstance();\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/unusual-whales-api.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fearnings%2Froute&page=%2Fapi%2Fearnings%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fearnings%2Froute.ts&appDir=C%3A%5CUsers%5Cmjhen%5CHTER%5CHTMLER%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cmjhen%5CHTER%5CHTMLER&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();