"use strict";(()=>{var e={};e.id=358,e.ids=[358],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7403:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>y,patchFetch:()=>_,requestAsyncStorage:()=>g,routeModule:()=>d,serverHooks:()=>h,staticGenerationAsyncStorage:()=>k});var a={};r.r(a),r.d(a,{GET:()=>m,POST:()=>p,dynamic:()=>l});var s=r(9303),n=r(8716),i=r(670),o=r(7070),u=r(3139);let l="force-dynamic",c=(e,t)=>e.filter(e=>{let r=e.put_call_ratio||e.putCallRatio||1,a=e.options_volume||e.optionsVolume||0,s=e.market_cap||e.marketCap||0,n=e.report_time||e.reportTime,i=void 0!==t.putCallRatioMin&&void 0!==t.putCallRatioMax?r>=t.putCallRatioMin&&r<=t.putCallRatioMax:r<.8||r>1.3,o=!t.minOptionsVolume||a>=t.minOptionsVolume,u=!t.minMarketCap||s>=t.minMarketCap,l=!t.reportTime||"all"===t.reportTime||n===t.reportTime;return i&&o&&u&&l});async function m(e){try{let{searchParams:t}=new URL(e.url),r=t.get("type")||"upcoming",a=t.get("date"),s=parseInt(t.get("limit")||"100"),n=t.get("min_options_volume")?parseInt(t.get("min_options_volume")):200,i=t.get("put_call_ratio_min")?parseFloat(t.get("put_call_ratio_min")):void 0,l=t.get("put_call_ratio_max")?parseFloat(t.get("put_call_ratio_max")):void 0,m=t.get("min_market_cap")?parseFloat(t.get("min_market_cap")):1e9,p=t.get("report_time"),d={minOptionsVolume:n,putCallRatioMin:i,putCallRatioMax:l,minMarketCap:m,reportTime:p||"all"},g=[];try{if("aftermarket"===r){let e=await u.uy.getEarningsAfterHours(a||void 0,s);g=e.data||e||[]}else if("premarket"===r){let e=await u.uy.getEarningsPreMarket(a||void 0,s);g=e.data||e||[]}else if("calendar"===r){let e=t.get("start_date"),r=t.get("end_date"),a=await u.uy.getEarningsCalendar(e||void 0,r||void 0);g=a.data||a||[]}else{let[e,t]=await Promise.all([u.uy.getEarningsPreMarket(a||void 0,Math.floor(s/2)),u.uy.getEarningsAfterHours(a||void 0,Math.floor(s/2))]);g=[...e.data||e||[],...t.data||t||[]]}let e=c(g,d),n=e.map(e=>e.ticker||e.symbol).filter(Boolean),i={earnings:g,filteredEarnings:e,filterCriteria:d,totalBeforeFilter:g.length,totalAfterFilter:e.length,qualifiedTickers:n,apiStatus:"connected",lastUpdated:new Date().toISOString()};return o.NextResponse.json(i)}catch(t){console.error("Unusual Whales API Error:",t);let e={earnings:[],filteredEarnings:[],filterCriteria:d,totalBeforeFilter:0,totalAfterFilter:0,qualifiedTickers:[],apiStatus:"error",lastUpdated:new Date().toISOString()};return o.NextResponse.json({...e,error:t.message||"API request failed",errorStatus:t.status})}}catch(e){return console.error("Earnings API Error:",e),o.NextResponse.json({error:"Failed to fetch earnings data",apiStatus:"error",lastUpdated:new Date().toISOString()},{status:500})}}async function p(e){try{let{tickers:t,customFilters:r}=await e.json();if(!t||!Array.isArray(t))return o.NextResponse.json({error:"Tickers array is required"},{status:400});let a=t.map(async e=>{try{let[t,r]=await Promise.all([u.uy.getEarningsPreMarket(void 0,1).catch(()=>({data:[]})),u.uy.getEarningsAfterHours(void 0,1).catch(()=>({data:[]}))]),a=(t.data||t||[]).filter(t=>(t.ticker||t.symbol)===e),s=(r.data||r||[]).filter(t=>(t.ticker||t.symbol)===e);return[...a,...s]}catch(t){return console.error(`Error fetching earnings for ${e}:`,t),[]}}),s=(await Promise.all(a)).flat(),n=r||{minOptionsVolume:200,minMarketCap:1e9},i=c(s,n);return o.NextResponse.json({earnings:s,filteredEarnings:i,requestedTickers:t,filterCriteria:n,resultsCount:i.length,apiStatus:"connected",timestamp:new Date().toISOString()})}catch(e){return console.error("POST earnings API error:",e),o.NextResponse.json({error:"Failed to fetch ticker-specific earnings data"},{status:500})}}let d=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/data/earnings/route",pathname:"/api/data/earnings",filename:"route",bundlePath:"app/api/data/earnings/route"},resolvedPagePath:"C:\\Users\\mjhen\\HTER\\HTMLER\\app\\api\\data\\earnings\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:g,staticGenerationAsyncStorage:k,serverHooks:h}=d,y="/api/data/earnings/route";function _(){return(0,i.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:k})}},3139:(e,t,r)=>{r.d(t,{uy:()=>o});let a=process.env.UNUSUAL_WHALES_API_BASE_URL||"https://api.unusualwhales.com",s=process.env.UNUSUAL_WHALES_API_KEY;class n extends Error{constructor(e,t,r){super(e),this.status=t,this.response=r,this.name="UnusualWhalesAPIError"}}class i{constructor(){this.rateLimitDelay=100}static getInstance(){return i.instance||(i.instance=new i),i.instance}getHeaders(){let e={Accept:"application/json","Content-Type":"application/json"};return s&&(e.Authorization=`Bearer ${s}`),e}buildUrl(e,t){let r=new URL(`/api${e}`,a);return t&&Object.entries(t).forEach(([e,t])=>{null!=t&&r.searchParams.append(e,String(t))}),r.toString()}async makeRequest(e,t={}){let{method:r="GET",params:a,cache:s="default"}=t;await new Promise(e=>setTimeout(e,this.rateLimitDelay));let i=this.buildUrl(e,a);try{let e=await fetch(i,{method:r,headers:this.getHeaders(),cache:s});if(!e.ok){let t=await e.text().catch(()=>"Unknown error");throw new n(`API request failed: ${e.status} ${e.statusText}`,e.status,t)}return await e.json()}catch(e){if(e instanceof n)throw e;throw new n(`Network error: ${e instanceof Error?e.message:"Unknown error"}`)}}async getMarketTide(e,t=!0,r=!1){let a={};return e&&(a.date=e),a.interval_5m=t,a.otm_only=r,this.makeRequest("/market/market-tide",{params:a,cache:"no-store"})}async getSectorTide(e,t){let r=`/market/${encodeURIComponent(e)}/sector-tide`,a={};return t&&(a.date=t),this.makeRequest(r,{params:a,cache:"no-store"})}async getMarketCorrelations(e,t){let r={};return e&&(r.start_date=e),t&&(r.end_date=t),this.makeRequest("/market/correlations",{params:r})}async getEarningsAfterHours(e,t=50,r=0){let a={limit:t,page:r};return e&&(a.date=e),this.makeRequest("/earnings/afterhours",{params:a})}async getEarningsPreMarket(e,t=50,r=0){let a={limit:t,page:r};return e&&(a.date=e),this.makeRequest("/earnings/premarket",{params:a})}async getEarningsHistorical(e){return this.makeRequest(`/earnings/${e}`)}async getOptionContract(e){return this.makeRequest(`/option-contract/${e}`)}async getOptionContractIntraday(e,t){let r={};return t&&(r.date=t),this.makeRequest(`/option-contract/${e}/intraday`,{params:r})}async getOptionContractVolumeProfile(e){return this.makeRequest(`/option-contract/${e}/volume-profile`)}async getStockOptionsData(e){return this.getStockFlowAlerts(e,!0,!0,50)}async getStockGreeks(e){return this.makeRequest(`/stock/${e}/greeks`)}async getStockOIPerStrike(e){return this.makeRequest(`/stock/${e}/oi-per-strike`)}async getStockOIPerExpiry(e){return this.makeRequest(`/stock/${e}/oi-per-expiry`)}async getStockOptionsVolume(e,t=1){return this.makeRequest(`/stock/${e}/options-volume`,{params:{limit:t}})}async getStockInfo(e){return this.makeRequest(`/stock/${e}`)}async getStockState(e){return this.makeRequest(`/stock/${e}/stock-state`)}async getStockNetPremTicks(e,t){let r={};return t&&(r.date=t),this.makeRequest(`/stock/${e}/net-prem-ticks`,{params:r})}async getStockFlowAlerts(e,t=!0,r=!0,a=100){try{let t=await this.makeRequest("/option-trades/flow-alerts",{params:{limit:2*a}});return t?.data?.data&&(t.data.data=t.data.data.filter(t=>t.underlying_symbol===e.toUpperCase())),t}catch(e){return this.makeRequest("/market/oi-change",{params:{limit:50,page:0}})}}async getFlowAlerts(e=50){return this.makeRequest("/option-trades/flow-alerts",{params:{limit:e}})}async getStockGEX(e){return this.makeRequest(`/stock/${e}/gex`)}async getStockGreekFlow(e,t,r){let a={};return t&&(a.date=t),r&&(a.expiry=r),this.makeRequest(`/stock/${e}/greek-flow`,{params:a})}async getStockMaxPain(e,t){let r={};return t&&(r.date=t),this.makeRequest(`/stock/${e}/max-pain`,{params:r})}async getStockNetPremTicksProcessed(e,t){try{let r=await this.getStockNetPremTicks(e,t);if(!r?.data?.data||!Array.isArray(r.data.data))return r;let{data:a}=r.data,s=["net_call_premium","net_call_volume","net_put_premium","net_put_volume"],n=[];return a.forEach((e,t)=>{e.net_call_premium=parseFloat(e.net_call_premium||"0"),e.net_put_premium=parseFloat(e.net_put_premium||"0"),e.net_call_volume=parseFloat(e.net_call_volume||"0"),e.net_put_volume=parseFloat(e.net_put_volume||"0"),0!==t&&s.forEach(r=>{e[r]=e[r]+n[t-1][r]}),n.push(e)}),{...r,data:{...r.data,data:n}}}catch(t){throw new n(`Failed to get processed net premium ticks for ${e}: ${t instanceof Error?t.message:"Unknown error"}`)}}async getCongressRecentTrades(e=100,t=0,r,a,s,n){let i={limit:e,offset:t};return r&&(i.start_date=r),a&&(i.end_date=a),s&&(i.ticker=s),n&&(i.congress_member=n),this.makeRequest("/congress/recent-trades",{params:i})}async getCongressTopTradedTickers(e=10,t,r){let a={limit:e};return t&&(a.start_date=t),r&&(a.end_date=r),this.makeRequest("/congress/top-traded-tickers",{params:a})}async getAlerts(e,t=!0,r=100,a=0,s,n){let i={intraday_only:t,limit:r,page:a};return e?.length&&e.forEach((e,t)=>{i[`config_ids[${t}]`]=e}),s?.length&&s.forEach((e,t)=>{i[`noti_types[${t}]`]=e}),n&&(i.ticker_symbols=n),this.makeRequest("/alerts",{params:i})}async getAlertConfigurations(){return this.makeRequest("/alerts/configuration")}async getNewsHeadlines(e=50,t=0,r,a,s){let n={limit:e,page:t};return r&&(n.start_date=r),a&&(n.end_date=a),s&&(n.ticker=s),this.makeRequest("/news/headlines",{params:n})}async getInstitutions(){return this.makeRequest("/institutions")}async getInstitutionHoldings(e){return this.makeRequest(`/institution/${encodeURIComponent(e)}/holdings`)}async getInstitutionActivity(e){return this.makeRequest(`/institution/${encodeURIComponent(e)}/activity`)}async getInstitutionSectors(e){return this.makeRequest(`/institution/${encodeURIComponent(e)}/sectors`)}async getETFInflowOutflow(e){return this.makeRequest(`/etfs/${e}/in_outflow`)}async getShortsData(e){return this.makeRequest(`/shorts/${e}/data`)}async getShortsVolumesByExchange(e){return this.makeRequest(`/shorts/${e}/volumes-by-exchange`)}async getShortsFTDs(e){return this.makeRequest(`/shorts/${e}/ftds`)}async getShortsInterestFloat(e){return this.makeRequest(`/shorts/${e}/interest-float`)}async getShortsVolumeAndRatio(e){return this.makeRequest(`/shorts/${e}/volume-and-ratio`)}async getMarketFDACalendar(e,t){let r={};return e&&(r.start_date=e),t&&(r.end_date=t),this.makeRequest("/market/fda-calendar",{params:r})}async getMarketOIChange(e=100,t=0){return this.makeRequest("/market/oi-change",{params:{limit:e,page:t}})}async getNetFlowExpiry(e,t,r,a){let s={};return e&&(s.ticker_symbol=e),t&&(s.tide_type=t),r&&(s.moneyness=r),a&&(s.expiry_category=a),this.makeRequest("/net-flow/expiry",{params:s})}async getStockInterpolatedIV(e,t){let r={};return t?.length&&t.forEach((e,t)=>{r[`days[${t}]`]=e}),this.makeRequest(`/stock/${e}/interpolated-iv`,{params:r})}async getStockNOPE(e){return this.makeRequest(`/stock/${e}/nope`)}async getStockSpotExposures(e,t,r){return t&&r?this.makeRequest(`/stock/${e}/spot-exposures/expiry-strike`,{params:{expiry:t,strike:r}}):this.makeRequest(`/stock/${e}/spot-exposures`)}async getDarkPoolData(e,t,r,a,s){let n={};return t&&(n.start_date=t),r&&(n.end_date=r),a&&(n.min_size=a),s&&(n.min_premium=s),this.makeRequest(`/stock/${e}/darkpool`,{params:n})}async getGroupFlowGreekFlow(e,t){let r=t?`/group-flow/${e}/greek-flow/${t}`:`/group-flow/${e}/greek-flow`;return this.makeRequest(r)}async getInstitutionLatestFilings(e=50,t=0){return this.makeRequest("/institution/latest_filings",{params:{limit:e,page:t}})}async getInstitutionOwnership(e){return this.makeRequest(`/institution/${e}/ownership`)}}let o=i.getInstance()}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[9276,5972],()=>r(7403));module.exports=a})();