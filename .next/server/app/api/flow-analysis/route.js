"use strict";(()=>{var e={};e.id=572,e.ids=[572],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},674:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>k,patchFetch:()=>g,requestAsyncStorage:()=>d,routeModule:()=>p,serverHooks:()=>_,staticGenerationAsyncStorage:()=>h});var r={};a.r(r),a.d(r,{GET:()=>m});var s=a(9303),i=a(8716),n=a(670),o=a(7070),l=a(3139);class u{static getInstance(){return u.instance||(u.instance=new u),u.instance}async checkOptionsLiquidity(e){try{let t=await l.uy.getStockOptionsVolume(e,1),a=t?.data?.data?.[0];if(a){let e=parseFloat(a.total_volume||"0"),t=parseFloat(a.total_premium||"0");return{hasLiquidity:e>=100&&t>=1e4,volume:e,premium:t}}return{hasLiquidity:!1,volume:0,premium:0}}catch(t){return console.warn(`Failed to check options liquidity for ${e}:`,t),{hasLiquidity:!0,volume:0,premium:0}}}async analyzeTickerFlow(e){try{let t=await this.checkOptionsLiquidity(e);if(!t.hasLiquidity)return{ticker:e,overall_sentiment:"neutral",confidence_score:15,metrics:{net_premium_ratio:1,volume_ratio:1,delta_flow:0,gamma_exposure:0,unusual_activity_score:0,max_pain_distance:0},breakdown:{bullish_signals:[],bearish_signals:[],key_levels:[],risk_factors:[`Low options liquidity (${t.volume} contracts, $${(t.premium/1e3).toFixed(1)}K premium)`]},last_updated:new Date().toISOString()};let a=await this.getFlowAlerts(e),r=this.calculateFlowMetricsFromAlerts(a,t),s=this.determineSentimentFromAlerts(r,a),i=this.generateBreakdownFromAlerts(a,r,t);return{ticker:e,overall_sentiment:s.sentiment,confidence_score:s.confidence,metrics:r,breakdown:i,last_updated:new Date().toISOString()}}catch(t){return console.error(`Flow analysis failed for ${e}:`,t),this.getDefaultSentiment(e)}}async getFlowAlerts(e){try{let t=await l.uy.getStockFlowAlerts(e,!0,!0,50);return t?.data?.data||[]}catch(t){return console.warn(`Failed to get flow alerts for ${e}:`,t),[]}}calculateFlowMetricsFromAlerts(e,t){if(0===e.length)return{net_premium_ratio:1,volume_ratio:1,delta_flow:0,gamma_exposure:0,unusual_activity_score:0,max_pain_distance:0};let a=e.filter(e=>"call"===e.option_type),r=e.filter(e=>"put"===e.option_type),s=a.reduce((e,t)=>e+t.premium,0),i=r.reduce((e,t)=>e+t.premium,0),n=a.reduce((e,t)=>e+t.volume,0),o=r.reduce((e,t)=>e+t.volume,0),l=a.reduce((e,t)=>e+t.delta*t.premium,0),u=r.reduce((e,t)=>e+Math.abs(t.delta)*t.premium,0);return{net_premium_ratio:i>0?s/i:s>0?2:1,volume_ratio:o>0?n/o:n>0?2:1,delta_flow:l-u,gamma_exposure:e.reduce((e,t)=>e+t.gamma*t.premium*100,0),unusual_activity_score:e.reduce((e,t)=>e+t.unusual_score,0)/e.length,max_pain_distance:0}}determineSentimentFromAlerts(e,t){let a=0,r=0,s=0;e.net_premium_ratio>1.5?(a+=2,s++):e.net_premium_ratio<.67&&(r+=2,s++),e.volume_ratio>1.3?(a+=1,s++):e.volume_ratio<.77&&(r+=1,s++),e.delta_flow>1e5?(a+=2,s++):e.delta_flow<-1e5&&(r+=2,s++),e.unusual_activity_score>70&&(s++,e.net_premium_ratio>1?a+=1:r+=1);let i=t.filter(e=>{let t=new Date(e.alert_time);return(Date.now()-t.getTime())/36e5<=2});if(i.length>0){let e=i.filter(e=>"call"===e.option_type).reduce((e,t)=>e+t.premium,0),t=i.filter(e=>"put"===e.option_type).reduce((e,t)=>e+t.premium,0);e>1.5*t?(a+=1,s++):t>1.5*e&&(r+=1,s++)}let n=a-r,o=s>0?Math.min(90,15*Math.abs(n)+10):10;return n>1?{sentiment:"bullish",confidence:o}:n<-1?{sentiment:"bearish",confidence:o}:{sentiment:"neutral",confidence:Math.max(10,o-20)}}generateBreakdownFromAlerts(e,t,a){let r=[],s=[],i=[],n=[];a&&a.volume>0&&(a.volume<500?i.push(`Moderate options volume (${a.volume} contracts)`):a.volume>2e3&&r.push(`High options liquidity (${a.volume} contracts)`)),t.net_premium_ratio>1.5?r.push(`Call premium dominance (${t.net_premium_ratio.toFixed(2)}:1 ratio)`):t.net_premium_ratio<.67&&s.push(`Put premium dominance (${(1/t.net_premium_ratio).toFixed(2)}:1 ratio)`),t.volume_ratio>1.3?r.push(`Call volume advantage (${t.volume_ratio.toFixed(2)}:1 ratio)`):t.volume_ratio<.77&&s.push(`Put volume advantage (${(1/t.volume_ratio).toFixed(2)}:1 ratio)`),t.delta_flow>1e5?r.push(`Positive delta flow (+$${(t.delta_flow/1e3).toFixed(0)}K)`):t.delta_flow<-1e5&&s.push(`Negative delta flow (-$${Math.abs(t.delta_flow/1e3).toFixed(0)}K)`),t.unusual_activity_score>70&&i.push(`Elevated unusual options activity (${t.unusual_activity_score.toFixed(0)}%)`);let o=e.filter(e=>{let t=new Date(e.alert_time);return(Date.now()-t.getTime())/36e5<=1});o.length>0&&i.push(`${o.length} alerts in the last hour`);let l=this.getPopularStrikes(e);return n.push(...l),{bullish_signals:r,bearish_signals:s,key_levels:[...new Set(n)].sort((e,t)=>e-t).slice(0,5),risk_factors:i}}async filterTickersByLiquidity(e){let t=[],a=[];for(let r=0;r<Math.min(e.length,15);r+=5){let s=e.slice(r,r+5),i=s.map(async e=>{let t=await this.checkOptionsLiquidity(e);return{ticker:e,hasLiquidity:t.hasLiquidity}});try{(await Promise.all(i)).forEach(({ticker:e,hasLiquidity:r})=>{r?t.push(e):a.push(e)})}catch(e){console.error("Liquidity filtering failed for batch:",s,e),t.push(...s)}r+5<Math.min(e.length,15)&&await new Promise(e=>setTimeout(e,1e3))}return{liquid:t,illiquid:a}}async analyzeBatch(e){let t={};console.log("Filtering tickers by options liquidity...");let{liquid:a,illiquid:r}=await this.filterTickersByLiquidity(e);r.forEach(e=>{t[e]={ticker:e,overall_sentiment:"neutral",confidence_score:15,metrics:{net_premium_ratio:1,volume_ratio:1,delta_flow:0,gamma_exposure:0,unusual_activity_score:0,max_pain_distance:0},breakdown:{bullish_signals:[],bearish_signals:[],key_levels:[],risk_factors:["Insufficient options liquidity for analysis"]},last_updated:new Date().toISOString()}}),console.log(`Analyzing ${a.length} liquid tickers...`);for(let e=0;e<a.length;e+=2){let r=a.slice(e,e+2),s=r.map(e=>this.analyzeTickerFlow(e));try{(await Promise.all(s)).forEach((e,a)=>{t[r[a]]=e})}catch(e){console.error("Batch analysis failed:",e),r.forEach(e=>{t[e]=this.getDefaultSentiment(e)})}e+2<a.length&&await new Promise(e=>setTimeout(e,3e3))}return t}getPopularStrikes(e){return Object.entries(e.reduce((e,t)=>(e[t.strike]=(e[t.strike]||0)+1,e),{})).sort(([,e],[,t])=>t-e).slice(0,3).map(([e])=>Number(e))}getDefaultSentiment(e){return{ticker:e,overall_sentiment:"neutral",confidence_score:10,metrics:{net_premium_ratio:1,volume_ratio:1,delta_flow:0,gamma_exposure:0,unusual_activity_score:0,max_pain_distance:0},breakdown:{bullish_signals:[],bearish_signals:[],key_levels:[],risk_factors:["Insufficient data for analysis"]},last_updated:new Date().toISOString()}}}let c=u.getInstance();async function m(e){try{let{searchParams:t}=new URL(e.url),a=t.get("ticker"),r=t.get("tickers");if(!a&&!r)return o.NextResponse.json({error:"Either ticker or tickers parameter is required"},{status:400});if(a){let e=await c.analyzeTickerFlow(a);return o.NextResponse.json({data:e})}if(r){let e=r.split(",").map(e=>e.trim().toUpperCase()),t=await c.analyzeBatch(e);return o.NextResponse.json({data:t})}}catch(e){return console.error("Flow analysis API error:",e),o.NextResponse.json({error:"Failed to analyze flow data"},{status:500})}}let p=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/flow-analysis/route",pathname:"/api/flow-analysis",filename:"route",bundlePath:"app/api/flow-analysis/route"},resolvedPagePath:"C:\\Users\\mjhen\\HTER\\HTMLER\\app\\api\\flow-analysis\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:d,staticGenerationAsyncStorage:h,serverHooks:_}=p,k="/api/flow-analysis/route";function g(){return(0,n.patchFetch)({serverHooks:_,staticGenerationAsyncStorage:h})}},3139:(e,t,a)=>{a.d(t,{uy:()=>o});let r=process.env.UNUSUAL_WHALES_API_BASE_URL||"https://api.unusualwhales.com",s=process.env.UNUSUAL_WHALES_API_KEY;class i extends Error{constructor(e,t,a){super(e),this.status=t,this.response=a,this.name="UnusualWhalesAPIError"}}class n{constructor(){this.rateLimitDelay=100}static getInstance(){return n.instance||(n.instance=new n),n.instance}getHeaders(){let e={Accept:"application/json","Content-Type":"application/json"};return s&&(e.Authorization=`Bearer ${s}`),e}buildUrl(e,t){let a=new URL(`/api${e}`,r);return t&&Object.entries(t).forEach(([e,t])=>{null!=t&&a.searchParams.append(e,String(t))}),a.toString()}async makeRequest(e,t={}){let{method:a="GET",params:r,cache:s="default"}=t;await new Promise(e=>setTimeout(e,this.rateLimitDelay));let n=this.buildUrl(e,r);try{let e=await fetch(n,{method:a,headers:this.getHeaders(),cache:s});if(!e.ok){let t=await e.text().catch(()=>"Unknown error");throw new i(`API request failed: ${e.status} ${e.statusText}`,e.status,t)}return await e.json()}catch(e){if(e instanceof i)throw e;throw new i(`Network error: ${e instanceof Error?e.message:"Unknown error"}`)}}async getMarketTide(e,t=!0,a=!1){let r={};return e&&(r.date=e),r.interval_5m=t,r.otm_only=a,this.makeRequest("/market/market-tide",{params:r,cache:"no-store"})}async getSectorTide(e,t){let a=`/market/${encodeURIComponent(e)}/sector-tide`,r={};return t&&(r.date=t),this.makeRequest(a,{params:r,cache:"no-store"})}async getMarketCorrelations(e,t){let a={};return e&&(a.start_date=e),t&&(a.end_date=t),this.makeRequest("/market/correlations",{params:a})}async getEarningsAfterHours(e,t=50,a=0){let r={limit:t,page:a};return e&&(r.date=e),this.makeRequest("/earnings/afterhours",{params:r})}async getEarningsPreMarket(e,t=50,a=0){let r={limit:t,page:a};return e&&(r.date=e),this.makeRequest("/earnings/premarket",{params:r})}async getEarningsHistorical(e){return this.makeRequest(`/earnings/${e}`)}async getOptionContract(e){return this.makeRequest(`/option-contract/${e}`)}async getOptionContractIntraday(e,t){let a={};return t&&(a.date=t),this.makeRequest(`/option-contract/${e}/intraday`,{params:a})}async getOptionContractVolumeProfile(e){return this.makeRequest(`/option-contract/${e}/volume-profile`)}async getStockOptionsData(e){return this.getStockFlowAlerts(e,!0,!0,50)}async getStockGreeks(e){return this.makeRequest(`/stock/${e}/greeks`)}async getStockOIPerStrike(e){return this.makeRequest(`/stock/${e}/oi-per-strike`)}async getStockOIPerExpiry(e){return this.makeRequest(`/stock/${e}/oi-per-expiry`)}async getStockOptionsVolume(e,t=1){return this.makeRequest(`/stock/${e}/options-volume`,{params:{limit:t}})}async getStockInfo(e){return this.makeRequest(`/stock/${e}`)}async getStockState(e){return this.makeRequest(`/stock/${e}/stock-state`)}async getStockNetPremTicks(e,t){let a={};return t&&(a.date=t),this.makeRequest(`/stock/${e}/net-prem-ticks`,{params:a})}async getStockFlowAlerts(e,t=!0,a=!0,r=100){try{let t=await this.makeRequest("/option-trades/flow-alerts",{params:{limit:2*r}});return t?.data?.data&&(t.data.data=t.data.data.filter(t=>t.underlying_symbol===e.toUpperCase())),t}catch(e){return this.makeRequest("/market/oi-change",{params:{limit:50,page:0}})}}async getFlowAlerts(e=50){return this.makeRequest("/option-trades/flow-alerts",{params:{limit:e}})}async getStockGEX(e){return this.makeRequest(`/stock/${e}/gex`)}async getStockGreekFlow(e,t,a){let r={};return t&&(r.date=t),a&&(r.expiry=a),this.makeRequest(`/stock/${e}/greek-flow`,{params:r})}async getStockMaxPain(e,t){let a={};return t&&(a.date=t),this.makeRequest(`/stock/${e}/max-pain`,{params:a})}async getStockNetPremTicksProcessed(e,t){try{let a=await this.getStockNetPremTicks(e,t);if(!a?.data?.data||!Array.isArray(a.data.data))return a;let{data:r}=a.data,s=["net_call_premium","net_call_volume","net_put_premium","net_put_volume"],i=[];return r.forEach((e,t)=>{e.net_call_premium=parseFloat(e.net_call_premium||"0"),e.net_put_premium=parseFloat(e.net_put_premium||"0"),e.net_call_volume=parseFloat(e.net_call_volume||"0"),e.net_put_volume=parseFloat(e.net_put_volume||"0"),0!==t&&s.forEach(a=>{e[a]=e[a]+i[t-1][a]}),i.push(e)}),{...a,data:{...a.data,data:i}}}catch(t){throw new i(`Failed to get processed net premium ticks for ${e}: ${t instanceof Error?t.message:"Unknown error"}`)}}async getCongressRecentTrades(e=100,t=0,a,r,s,i){let n={limit:e,offset:t};return a&&(n.start_date=a),r&&(n.end_date=r),s&&(n.ticker=s),i&&(n.congress_member=i),this.makeRequest("/congress/recent-trades",{params:n})}async getCongressTopTradedTickers(e=10,t,a){let r={limit:e};return t&&(r.start_date=t),a&&(r.end_date=a),this.makeRequest("/congress/top-traded-tickers",{params:r})}async getAlerts(e,t=!0,a=100,r=0,s,i){let n={intraday_only:t,limit:a,page:r};return e?.length&&e.forEach((e,t)=>{n[`config_ids[${t}]`]=e}),s?.length&&s.forEach((e,t)=>{n[`noti_types[${t}]`]=e}),i&&(n.ticker_symbols=i),this.makeRequest("/alerts",{params:n})}async getAlertConfigurations(){return this.makeRequest("/alerts/configuration")}async getNewsHeadlines(e=50,t=0,a,r,s){let i={limit:e,page:t};return a&&(i.start_date=a),r&&(i.end_date=r),s&&(i.ticker=s),this.makeRequest("/news/headlines",{params:i})}async getInstitutions(){return this.makeRequest("/institutions")}async getInstitutionHoldings(e){return this.makeRequest(`/institution/${encodeURIComponent(e)}/holdings`)}async getInstitutionActivity(e){return this.makeRequest(`/institution/${encodeURIComponent(e)}/activity`)}async getInstitutionSectors(e){return this.makeRequest(`/institution/${encodeURIComponent(e)}/sectors`)}async getETFInflowOutflow(e){return this.makeRequest(`/etfs/${e}/in_outflow`)}async getShortsData(e){return this.makeRequest(`/shorts/${e}/data`)}async getShortsVolumesByExchange(e){return this.makeRequest(`/shorts/${e}/volumes-by-exchange`)}async getShortsFTDs(e){return this.makeRequest(`/shorts/${e}/ftds`)}async getShortsInterestFloat(e){return this.makeRequest(`/shorts/${e}/interest-float`)}async getShortsVolumeAndRatio(e){return this.makeRequest(`/shorts/${e}/volume-and-ratio`)}async getMarketFDACalendar(e,t){let a={};return e&&(a.start_date=e),t&&(a.end_date=t),this.makeRequest("/market/fda-calendar",{params:a})}async getMarketOIChange(e=100,t=0){return this.makeRequest("/market/oi-change",{params:{limit:e,page:t}})}async getNetFlowExpiry(e,t,a,r){let s={};return e&&(s.ticker_symbol=e),t&&(s.tide_type=t),a&&(s.moneyness=a),r&&(s.expiry_category=r),this.makeRequest("/net-flow/expiry",{params:s})}async getStockInterpolatedIV(e,t){let a={};return t?.length&&t.forEach((e,t)=>{a[`days[${t}]`]=e}),this.makeRequest(`/stock/${e}/interpolated-iv`,{params:a})}async getStockNOPE(e){return this.makeRequest(`/stock/${e}/nope`)}async getStockSpotExposures(e,t,a){return t&&a?this.makeRequest(`/stock/${e}/spot-exposures/expiry-strike`,{params:{expiry:t,strike:a}}):this.makeRequest(`/stock/${e}/spot-exposures`)}async getDarkPoolData(e,t,a,r,s){let i={};return t&&(i.start_date=t),a&&(i.end_date=a),r&&(i.min_size=r),s&&(i.min_premium=s),this.makeRequest(`/stock/${e}/darkpool`,{params:i})}async getGroupFlowGreekFlow(e,t){let a=t?`/group-flow/${e}/greek-flow/${t}`:`/group-flow/${e}/greek-flow`;return this.makeRequest(a)}async getInstitutionLatestFilings(e=50,t=0){return this.makeRequest("/institution/latest_filings",{params:{limit:e,page:t}})}async getInstitutionOwnership(e){return this.makeRequest(`/institution/${e}/ownership`)}}let o=n.getInstance()}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[9276,5972],()=>a(674));module.exports=r})();