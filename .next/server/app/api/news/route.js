"use strict";(()=>{var e={};e.id=7634,e.ids=[7634],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},7846:(e,t,s)=>{s.r(t),s.d(t,{originalPathname:()=>h,patchFetch:()=>g,requestAsyncStorage:()=>k,routeModule:()=>m,serverHooks:()=>d,staticGenerationAsyncStorage:()=>p});var r={};s.r(r),s.d(r,{GET:()=>l});var a=s(9303),n=s(8716),o=s(670),i=s(7070),u=s(3139);function c(e){return{id:e.id||`${e.source}-${e.created_at}-${Math.random().toString(36).substr(2,9)}`,title:e.headline||e.title||"No title available",description:e.summary||e.description||e.content||null,url:e.url||e.link||null,source:e.source||"Unusual Whales",published_at:e.created_at||e.published_at||new Date().toISOString(),ticker_symbols:e.tickers||e.symbols||[],sentiment:e.sentiment||"neutral",relevance_score:e.is_major?.8:.5}}async function l(e){try{let{searchParams:t}=new URL(e.url),s=parseInt(t.get("limit")||"50"),r=parseInt(t.get("page")||"0"),a=t.get("start_date")||void 0,n=t.get("end_date")||void 0,o=t.get("ticker")||void 0,l=await u.uy.getNewsHeadlines(s,r,a,n,o),m=(l.data||l||[]).map(c);return i.NextResponse.json(m)}catch(e){return console.error("News API error:",e),i.NextResponse.json({error:"Failed to fetch news headlines"},{status:500})}}let m=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/news/route",pathname:"/api/news",filename:"route",bundlePath:"app/api/news/route"},resolvedPagePath:"C:\\Users\\mjhen\\HTER\\HTMLER\\app\\api\\news\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:k,staticGenerationAsyncStorage:p,serverHooks:d}=m,h="/api/news/route";function g(){return(0,o.patchFetch)({serverHooks:d,staticGenerationAsyncStorage:p})}},3139:(e,t,s)=>{s.d(t,{uy:()=>i});let r=process.env.UNUSUAL_WHALES_API_BASE_URL||"https://api.unusualwhales.com",a=process.env.UNUSUAL_WHALES_API_KEY;class n extends Error{constructor(e,t,s){super(e),this.status=t,this.response=s,this.name="UnusualWhalesAPIError"}}class o{constructor(){this.rateLimitDelay=100}static getInstance(){return o.instance||(o.instance=new o),o.instance}getHeaders(){let e={Accept:"application/json","Content-Type":"application/json"};return a&&(e.Authorization=`Bearer ${a}`),e}buildUrl(e,t){let s=new URL(`/api${e}`,r);return t&&Object.entries(t).forEach(([e,t])=>{null!=t&&s.searchParams.append(e,String(t))}),s.toString()}async makeRequest(e,t={}){let{method:s="GET",params:r,cache:a="default"}=t;await new Promise(e=>setTimeout(e,this.rateLimitDelay));let o=this.buildUrl(e,r);try{let e=await fetch(o,{method:s,headers:this.getHeaders(),cache:a});if(!e.ok){let t=await e.text().catch(()=>"Unknown error");throw new n(`API request failed: ${e.status} ${e.statusText}`,e.status,t)}return await e.json()}catch(e){if(e instanceof n)throw e;throw new n(`Network error: ${e instanceof Error?e.message:"Unknown error"}`)}}async getMarketTide(e,t=!0,s=!1){let r={};return e&&(r.date=e),r.interval_5m=t,r.otm_only=s,this.makeRequest("/market/market-tide",{params:r,cache:"no-store"})}async getSectorTide(e,t){let s=`/market/${encodeURIComponent(e)}/sector-tide`,r={};return t&&(r.date=t),this.makeRequest(s,{params:r,cache:"no-store"})}async getMarketCorrelations(e,t){let s={};return e&&(s.start_date=e),t&&(s.end_date=t),this.makeRequest("/market/correlations",{params:s})}async getEarningsAfterHours(e,t=50,s=0){let r={limit:t,page:s};return e&&(r.date=e),this.makeRequest("/earnings/afterhours",{params:r})}async getEarningsPreMarket(e,t=50,s=0){let r={limit:t,page:s};return e&&(r.date=e),this.makeRequest("/earnings/premarket",{params:r})}async getEarningsHistorical(e){return this.makeRequest(`/earnings/${e}`)}async getOptionContract(e){return this.makeRequest(`/option-contract/${e}`)}async getOptionContractIntraday(e,t){let s={};return t&&(s.date=t),this.makeRequest(`/option-contract/${e}/intraday`,{params:s})}async getOptionContractVolumeProfile(e){return this.makeRequest(`/option-contract/${e}/volume-profile`)}async getStockOptionsData(e){return this.getStockFlowAlerts(e,!0,!0,50)}async getStockGreeks(e){return this.makeRequest(`/stock/${e}/greeks`)}async getStockOIPerStrike(e){return this.makeRequest(`/stock/${e}/oi-per-strike`)}async getStockOIPerExpiry(e){return this.makeRequest(`/stock/${e}/oi-per-expiry`)}async getStockOptionsVolume(e,t=1){return this.makeRequest(`/stock/${e}/options-volume`,{params:{limit:t}})}async getStockInfo(e){return this.makeRequest(`/stock/${e}`)}async getStockState(e){return this.makeRequest(`/stock/${e}/stock-state`)}async getStockNetPremTicks(e,t){let s={};return t&&(s.date=t),this.makeRequest(`/stock/${e}/net-prem-ticks`,{params:s})}async getStockFlowAlerts(e,t=!0,s=!0,r=100){try{let t=await this.makeRequest("/option-trades/flow-alerts",{params:{limit:2*r}});return t?.data?.data&&(t.data.data=t.data.data.filter(t=>t.underlying_symbol===e.toUpperCase())),t}catch(e){return this.makeRequest("/market/oi-change",{params:{limit:50,page:0}})}}async getFlowAlerts(e=50){return this.makeRequest("/option-trades/flow-alerts",{params:{limit:e}})}async getStockGEX(e){return this.makeRequest(`/stock/${e}/gex`)}async getStockGreekFlow(e,t,s){let r={};return t&&(r.date=t),s&&(r.expiry=s),this.makeRequest(`/stock/${e}/greek-flow`,{params:r})}async getStockMaxPain(e,t){let s={};return t&&(s.date=t),this.makeRequest(`/stock/${e}/max-pain`,{params:s})}async getStockNetPremTicksProcessed(e,t){try{let s=await this.getStockNetPremTicks(e,t);if(!s?.data?.data||!Array.isArray(s.data.data))return s;let{data:r}=s.data,a=["net_call_premium","net_call_volume","net_put_premium","net_put_volume"],n=[];return r.forEach((e,t)=>{e.net_call_premium=parseFloat(e.net_call_premium||"0"),e.net_put_premium=parseFloat(e.net_put_premium||"0"),e.net_call_volume=parseFloat(e.net_call_volume||"0"),e.net_put_volume=parseFloat(e.net_put_volume||"0"),0!==t&&a.forEach(s=>{e[s]=e[s]+n[t-1][s]}),n.push(e)}),{...s,data:{...s.data,data:n}}}catch(t){throw new n(`Failed to get processed net premium ticks for ${e}: ${t instanceof Error?t.message:"Unknown error"}`)}}async getCongressRecentTrades(e=100,t=0,s,r,a,n){let o={limit:e,offset:t};return s&&(o.start_date=s),r&&(o.end_date=r),a&&(o.ticker=a),n&&(o.congress_member=n),this.makeRequest("/congress/recent-trades",{params:o})}async getCongressTopTradedTickers(e=10,t,s){let r={limit:e};return t&&(r.start_date=t),s&&(r.end_date=s),this.makeRequest("/congress/top-traded-tickers",{params:r})}async getAlerts(e,t=!0,s=100,r=0,a,n){let o={intraday_only:t,limit:s,page:r};return e?.length&&e.forEach((e,t)=>{o[`config_ids[${t}]`]=e}),a?.length&&a.forEach((e,t)=>{o[`noti_types[${t}]`]=e}),n&&(o.ticker_symbols=n),this.makeRequest("/alerts",{params:o})}async getAlertConfigurations(){return this.makeRequest("/alerts/configuration")}async getNewsHeadlines(e=50,t=0,s,r,a){let n={limit:e,page:t};return s&&(n.start_date=s),r&&(n.end_date=r),a&&(n.ticker=a),this.makeRequest("/news/headlines",{params:n})}async getInstitutions(){return this.makeRequest("/institutions")}async getInstitutionHoldings(e){return this.makeRequest(`/institution/${encodeURIComponent(e)}/holdings`)}async getInstitutionActivity(e){return this.makeRequest(`/institution/${encodeURIComponent(e)}/activity`)}async getInstitutionSectors(e){return this.makeRequest(`/institution/${encodeURIComponent(e)}/sectors`)}async getETFInflowOutflow(e){return this.makeRequest(`/etfs/${e}/in_outflow`)}async getShortsData(e){return this.makeRequest(`/shorts/${e}/data`)}async getShortsVolumesByExchange(e){return this.makeRequest(`/shorts/${e}/volumes-by-exchange`)}async getShortsFTDs(e){return this.makeRequest(`/shorts/${e}/ftds`)}async getShortsInterestFloat(e){return this.makeRequest(`/shorts/${e}/interest-float`)}async getShortsVolumeAndRatio(e){return this.makeRequest(`/shorts/${e}/volume-and-ratio`)}async getMarketFDACalendar(e,t){let s={};return e&&(s.start_date=e),t&&(s.end_date=t),this.makeRequest("/market/fda-calendar",{params:s})}async getMarketOIChange(e=100,t=0){return this.makeRequest("/market/oi-change",{params:{limit:e,page:t}})}async getNetFlowExpiry(e,t,s,r){let a={};return e&&(a.ticker_symbol=e),t&&(a.tide_type=t),s&&(a.moneyness=s),r&&(a.expiry_category=r),this.makeRequest("/net-flow/expiry",{params:a})}async getStockInterpolatedIV(e,t){let s={};return t?.length&&t.forEach((e,t)=>{s[`days[${t}]`]=e}),this.makeRequest(`/stock/${e}/interpolated-iv`,{params:s})}async getStockNOPE(e){return this.makeRequest(`/stock/${e}/nope`)}async getStockSpotExposures(e,t,s){return t&&s?this.makeRequest(`/stock/${e}/spot-exposures/expiry-strike`,{params:{expiry:t,strike:s}}):this.makeRequest(`/stock/${e}/spot-exposures`)}async getDarkPoolData(e,t,s,r,a){let n={};return t&&(n.start_date=t),s&&(n.end_date=s),r&&(n.min_size=r),a&&(n.min_premium=a),this.makeRequest(`/stock/${e}/darkpool`,{params:n})}async getGroupFlowGreekFlow(e,t){let s=t?`/group-flow/${e}/greek-flow/${t}`:`/group-flow/${e}/greek-flow`;return this.makeRequest(s)}async getInstitutionLatestFilings(e=50,t=0){return this.makeRequest("/institution/latest_filings",{params:{limit:e,page:t}})}async getInstitutionOwnership(e){return this.makeRequest(`/institution/${e}/ownership`)}}let i=o.getInstance()}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[9276,5972],()=>s(7846));module.exports=r})();